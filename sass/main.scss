
$color-primary:#55c57a;
$color-primary-light:#7ed56f;
$color-primary-dark: #28b485;
$color-grey-dark:#777;
$color-white: #fff;
$color-black: #000;

// @mixin earth-pos($col){
 
// }
/* cross browser reset */
*,
*::after,
*::before {
    padding: 0;
    margin: 0;
    box-sizing: inherit;
}

html {
    font-size: 62.5%; // 10px
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7; 
    /* line height is 1.7 times the default */
    color:$color-grey-dark;
    padding: 3rem;

    box-sizing: border-box;
}

.header{
    height: 95vh;
    background-image: linear-gradient(
    to right bottom,
      rgba($color-primary-light, 0.801), 
      rgba($color-primary-dark, 0.801)) ,
      url(../img/hero.jpg);
    background-size: cover;        /* Stretches(adjusts) along with viewport */
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    &__logo-box{
        position: absolute;    /* it is relative to parent header  */
        top: 4rem;
        left: 4rem;
    }
    &__logo{
        height: 3.5rem  /* browser defines the width of the logo */
    }
    
    &__text-box{
        position: absolute;
        top: 40%;    /* it is relative to parent header  */
        left: 50%;
        transform: translate(-50%, -50%);  /* This is with respect to the element itself*/
        text-align: center;
    }
}


.heading-primary{
    color:$color-white;
    text-transform: uppercase;
    margin-bottom: 6rem;

    backface-visibility: hidden;

    &--main{
        display: block;
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
    
        animation-name: moveInLeft;
        animation-duration: 1s;
        animation-timing-function: ease-out;
    }
    &--sub{
        display: block;
        font-size: 2rem;
        font-weight: 400;
        letter-spacing: 1.75rem;
        
        animation-name: moveInRight;
        animation-duration: 1s;
        animation-timing-function: ease-out;
    }
}


@keyframes moveInLeft{
    0%{
        opacity: 0;
        transform: translateX(-10rem);
    }
    80%{
        transform: translateX(1rem);
    }
    100%{
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight{
    0%{
        opacity: 0;
        transform: translateX(10rem);
    }
    80%{
        transform: translateX(-1rem);
    }
    100%{
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom{
    0%{
        opacity: 0;
        transform: translateY(7rem);
    }
    100%{
        transform: translateY(0);
        opacity: 1;
    }
}

.btn{
    &:link,
    &:visited{
        text-transform: uppercase;
        text-decoration: none;
        font-size: 1.5rem;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s;
        position: relative; 
        
    }
    
    &:hover{
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black,.2); /* x-shadow y-shadow blur*/

        &::after{
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;  /* fades out the animation on hover*/
        }
     }
    &:active{
        transform: translateY(-.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black,.2);
    }
    
    &--white{
        background-color:$color-white;
        color:$color-grey-dark;

        &::after{
            background-color:$color-white;
         }
        
    }
    &::after{
        content: "";  /* mandatory*/
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0%;
        left: 0%;
        z-index: -1;
        transition: all .4s;  /* animation effect for after hover btn */
    }
    
    &--animated{
        animation: moveInBottom 2s ease-out .60s;
        animation-fill-mode: backwards; /* Since we are setting a delay, btn is already visible.
                                        This avoids that and sets the element to 0% of animation*/
    }
}


@mixin container-dimension($pos:absolute){
    position: $pos;
    width:100%;
    height:100%;
}

.container{
    bottom: .01%;
    right: .5%;
    margin: 0 auto;
    position: absolute;
    width: 100px;
    height: 100px;
    overflow:hidden;
}

.planet{
    @include container-dimension;
    background:url(https://demo.tutorialzine.com/2013/10/css3-features-you-can-finally-use/assets/img/planet.png) no-repeat center center;
    background-size: 35%;
}
.rocket{
    @include container-dimension;
    background:url(https://demo.tutorialzine.com/2013/10/css3-features-you-can-finally-use/assets/img/rocket.png) no-repeat 5% center;
    background-size: 30%;
    visibility: hidden;
    /* Chrome still requires the -webkit- prefix */
    -webkit-animation:orbit 2s linear infinite;
    animation:orbit 2s linear infinite;
    animation-delay: 2s;
    //animation-fill-mode: backwards;
    transition:background-position 0.8s;
}

@-webkit-keyframes orbit {
    from {
        
        -webkit-transform:rotate(0deg);}
    to {
        -webkit-transform:rotate(360deg);
    }
}
@keyframes orbit {
    from {
        visibility: visible;
        opacity: 1;
        transform:rotate(0deg);
        -webkit-transform:rotate(0deg);}
    to {
        transform:rotate(360deg);
        -webkit-transform:rotate(360deg);
    }
}
